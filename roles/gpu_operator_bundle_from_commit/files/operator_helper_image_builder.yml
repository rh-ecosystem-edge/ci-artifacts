apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    app: gpu-operator-ci
  name: helper-image-builder
  namespace: gpu-operator-ci-utils
spec:
  output:
    to:
      kind: ImageStreamTag
      name: gpu-operator-ci-utils:builder_helper
      namespace: gpu-operator-ci-utils
  source:
    type: Dockerfile
    dockerfile: |
      # git/Dockerfile
      # https://github.com/containers/buildah/blob/main/contrib/buildahimage/upstream/Containerfile
      #
      # Build a Buildah container image from the latest
      # upstream version of Buildah on GitHub.
      # https://github.com/containers/buildah
      # This image can be used to create a secured container
      # that runs safely with privileges within the container.
      # The containers created by this image also come with a
      # Buildah development environment in /root/buildah.
      #
      FROM registry.fedoraproject.org/fedora:36

      # Don't include container-selinux and remove
      # directories used by dnf that are just taking
      # up space.  The latest buildah + deps. come from
      # https://copr.fedorainfracloud.org/coprs/rhcontainerbot/podman-next/
      # TODO: rpm --setcaps... needed due to Fedora (base) image builds
      #       being (maybe still?) affected by
      #       https://bugzilla.redhat.com/show_bug.cgi?id=1995337#c3
      RUN dnf -y update && \
          rpm --setcaps shadow-utils 2>/dev/null && \
          dnf -y install 'dnf-command(copr)' --enablerepo=updates-testing && \
          dnf -y copr enable rhcontainerbot/podman-next && \
          dnf -y install buildah fuse-overlayfs \
              --exclude container-selinux \
              --enablerepo=updates-testing && \
          dnf clean all && \
          rm -rf /var/cache /var/log/dnf* /var/log/yum.*

      # The following layer is not part of the original file
      RUN dnf -y install git \
            jq \
            make \
            podman \
            python3 python3-devel python3-pip python3-setuptools \
            --exclude container-selinux \
            --enablerepo=updates-testing && \
          dnf clean all && \
          python3 -m pip install --no-cache-dir --upgrade setuptools pip wheel && \
          python3 -m pip install --no-cache-dir yq

      # Define uid/gid ranges for our user https://github.com/containers/buildah/issues/3053
      RUN useradd build && \
          echo -e "build:1:999\npodman:1001:64535" > /etc/subuid && \
          echo -e "build:1:999\npodman:1001:64535" > /etc/subgid && \
          mkdir -p /home/build/.local/share/containers && \
          chown -R build:build /home/build

      ADD https://raw.githubusercontent.com/containers/buildah/main/contrib/buildahimage/stable/containers.conf /etc/containers/

      # Copy & modify the defaults to provide reference if runtime changes needed.
      # Changes here are required for running with fuse-overlay storage inside container.
      RUN sed -e 's|^#mount_program|mount_program|g' \
              -e '/additionalimage.*/a "/var/lib/shared",' \
              -e 's|^mountopt[[:space:]]*=.*$|mountopt = "nodev,fsync=0"|g' \
              /usr/share/containers/storage.conf \
              > /etc/containers/storage.conf && \
          chmod 644 /etc/containers/storage.conf

      RUN mkdir -p /var/lib/shared/overlay-images \
                   /var/lib/shared/overlay-layers \
                   /var/lib/shared/vfs-images \
                   /var/lib/shared/vfs-layers && \
          touch /var/lib/shared/overlay-images/images.lock && \
          touch /var/lib/shared/overlay-layers/layers.lock && \
          touch /var/lib/shared/vfs-images/images.lock && \
          touch /var/lib/shared/vfs-layers/layers.lock

      VOLUME /var/lib/containers
      VOLUME /home/build/.local/share/containers

      # Set an environment variable to default to chroot isolation for RUN
      # instructions and "buildah run".
      ENV BUILDAH_ISOLATION=chroot

  strategy:
    dockerStrategy:
      from:
        kind: DockerImage
        name: registry.fedoraproject.org/fedora:35
    type: Docker
  triggers:
  - type: ConfigChange
