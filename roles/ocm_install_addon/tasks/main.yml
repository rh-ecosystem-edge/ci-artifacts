---
- name: Fail if ocm_addon_id is undefined
  fail: msg="Bailing out. This play requires 'ocm_addon_id'"
  when: ocm_addon_id is undefined

- name: ocm addon id
  debug:
    msg: "ocm addon id to install: {{ ocm_addon_id  }}"

- name: Check if addon is already installed
  shell: 
    cmd: "ocm get /api/clusters_mgmt/v1/clusters/{{ ocm_cluster_id }}/addons/{{ ocm_addon_id  }} 2>&1 | jq -r '.kind'"
  register: ocm_addon_precheck
  failed_when: false
  changed_when: false

- name: Set addon current state
  set_fact:
    addon_install_needed: "{{ ocm_addon_precheck.stdout == 'Error' }}"
  changed_when: false

- name: Install needed
  debug: 
    msg: "Install needed: {{ addon_install_needed  }}"

- name: Create ocm addon install payload
  template:
    src: roles/ocm_install_addon/files/ocm_addon_template.json.j2
    dest: /tmp/addon_{{ ocm_addon_id  }}.json
    mode: '0777'
  changed_when: false
  when: addon_install_needed

- name: Replace single quote with double in install payload
  when: addon_install_needed
  replace:
    path: "/tmp/addon_{{ com_addon_id }}.json"
    regexp: "'"
    replace: '"'

- name: "Install addon {{ ocm_addon_id  }} via ocm"
  shell: 
    cmd: "ocm post /api/clusters_mgmt/v1/clusters/{{ ocm_cluster_id  }}/addons --body=/tmp/addon_{{ ocm_addon_id  }}.json 2>&1 | jq -r '.kind'"
  register: addon_install_command
  failed_when: false
  when: addon_install_needed

- name: Fail if response kind is not AddOnInstallation
  fail: 
    msg: "response kind: {{ addon_install_command.stdout }}"
  when: 
    - addon_install_command is defined
    - addon_install_command.stdout is defined
    - addon_install_command.stdout != 'AddOnInstallation'

- name: Debug wait_for_ready_state
  debug: msg="Wait for ready state={{ wait_for_ready_state }}"

- name: Poll addon state until reached desired state
  shell:
    cmd: "ocm get /api/clusters_mgmt/v1/clusters/{{ ocm_cluster_id }}/addons/{{ ocm_addon_id  }} 2>&1 | jq -r '.state'"
  register: addon_state_result
  changed_when: false
  retries: 8
  delay: 600
  until: | 
    (addon_state_result.stdout == 'installing' and not wait_for_ready_state) or
    (addon_state_result.stdout == 'ready')
  failed_when: |
    (addon_state_result.stdout == 'deleting') or
    (addon_state_result.stdout == 'failed') or
    (wait_for_ready_state and addon_state_result.stdout != 'ready')

- name: Polling end debug info
  debug: msg="AddinId={{ ocm_addon_id }}, Wait for ready state={{ wait_for_ready_state }}, Current addon state={{ addon_state_result.stdout }}"
